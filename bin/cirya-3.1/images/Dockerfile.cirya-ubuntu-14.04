FROM ubuntu:14.04

# much of this was gleaned from https://github.com/lxc/lxc/blob/lxc-0.8.0/templates/lxc-ubuntu.in
# and then heavily modified and hacked like crazy

# we're going to want this bad boy installed so we can connect :)
RUN apt-get update && apt-get install -y ssh

RUN echo '# fake some events needed for correct startup other services \n\
\n\
description     "In-Container Upstart Fake Events"\n\
\n\
start on startup\n\
\n\
script\n\
	rm -rf /var/run/*.pid\n\
	rm -rf /var/run/network/*\n\
	/sbin/initctl emit stopped JOB=udevtrigger --no-wait\n\
	/sbin/initctl emit started JOB=udev --no-wait\n\
	/sbin/initctl emit runlevel RUNLEVEL=3 --no-wait\n\
end script\n' > /etc/init/fake-container-events.conf

# undo some leet hax of the base image
RUN rm /usr/sbin/policy-rc.d; \
	rm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl

# generate a nice UTF-8 locale for our use
RUN locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8

# remove some pointless services
RUN /usr/sbin/update-rc.d -f ondemand remove; \
	for f in \
		/etc/init/u*.conf \
		/etc/init/mounted-dev.conf \
		/etc/init/mounted-proc.conf \
		/etc/init/mounted-run.conf \
		/etc/init/mounted-tmp.conf \
		/etc/init/mounted-var.conf \
		/etc/init/hostname.conf \
		/etc/init/networking.conf \
		/etc/init/tty*.conf \
		/etc/init/plymouth*.conf \
		/etc/init/hwclock*.conf \
		/etc/init/module*.conf\
	; do \
		dpkg-divert --local --rename --add "$f"; \
	done; \
	echo '# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab

# small fix for SSH in 13.10 (that's harmless everywhere else)
RUN sed -ri 's/^session\s+required\s+pam_loginuid.so$/session optional pam_loginuid.so/' /etc/pam.d/sshd

RUN sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config

# let Upstart know it's in a container
ENV container docker

# Set up root login from ssh
RUN echo 'root:root' |chpasswd
RUN sed -ri 's/^PermitRootLogin\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN sed -ri 's/^GSSAPIAuthentication\s+.*/GSSAPIAuthentication no/' /etc/ssh/sshd_config
RUN sed -ri 's/^UseDNS\s+.*/UseDNS no/' /etc/ssh/sshd_config
RUN sed -ri 's/^#UseDNS\s+.*/UseDNS no/' /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config

# Create ssh directories
RUN mkdir /var/run/sshd
RUN chmod 0755 /var/run/sshd

# Install dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" wget python iptables telnet vim rsyslog net-tools netcat iputils-ping openssh-server build-essential git file

# Install asinfo
RUN \
wget -O aerospike-tools.tgz 'http://aerospike.com/download/tools/latest/artifact/ubuntu16' && \
tar -xvf aerospike-tools.tgz && \
cd aerospike-tools-*-ubuntu* && \
./asinstall && \
cd .. && \
rm -rf aerospike-tools.tgz aerospike-tools-*-ubuntu*

# Disable logrotate
RUN rm /etc/logrotate.d/aerospike* || true

#fake time lib
RUN \
cd /tmp && \
git clone https://github.com/wolfcw/libfaketime.git && \
cd libfaketime && \
make && \
make install

# we can has SSH
EXPOSE 22

# pepare for takeoff
CMD ["/sbin/init"]
